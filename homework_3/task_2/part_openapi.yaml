openapi: 3.0.1
info:
  version: 1.0.0
  title: Shop
components:
  schemas:
# Добавить в спецификацию объект Order (заказ)
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        orderDate:
          type: string
          format: date
        status:
          type: string
          description: Order Status
          enum:
            - approved
            - delivered
        complete:
          type: boolean
paths:
  /orders:
# d. Получение списка заказов с сортировкой по дате GET:/order (требует авторизации)
    get:
      tags:
      - order
      summary: Lists Orders with filters
      operationId: ListOrders
      parameters:
        - name: date_sort
          in: query
          description: Sorted by date
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        400:
          description: Invalid price range
          content: { }
      security:
        - api_key: []
# a. Добавление нового заказа POST:/order
    post:
      tags:
      - order
      summary: Add a new order to the store
      operationId: placeOrder
      requestBody:
        description: Order to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}:
# c. Получение заказа по ID GET:/order/{id} (требует авторизации)
    get:
      tags:
        - order
      summary: Find purchase order by ID
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: Fined order by id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      security:
        - api_key: [ ]
# b. Редактирование заказа по ID PUT:/order/{id} (требует авторизации)
    put:
      tags:
        - order
      summary: Edit order
      operationId: editOrderWithForm
      parameters:
        - name: id
          in: path
          description: ID of order that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          description: ItemId of order that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: path
          description: Quantity of order that needs to be updated
          required: true
          schema:
            type: integer
            format: int32
        - name: orderDate
          in: path
          description: OrderDate of order that needs to be updated
          required: true
          schema:
            type: string
            format: date
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: [ ]


